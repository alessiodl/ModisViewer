{"dependencies":[{"name":"../Image.js","loc":{"line":17,"column":25}},{"name":"../ImageState.js","loc":{"line":18,"column":23}},{"name":"../dom.js","loc":{"line":19,"column":38}},{"name":"../events/EventType.js","loc":{"line":20,"column":22}},{"name":"../extent.js","loc":{"line":21,"column":48}},{"name":"../proj.js","loc":{"line":22,"column":37}},{"name":"./Image.js","loc":{"line":23,"column":54}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Image = require(\"../Image.js\");\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _ImageState = require(\"../ImageState.js\");\n\nvar _ImageState2 = _interopRequireDefault(_ImageState);\n\nvar _dom = require(\"../dom.js\");\n\nvar _EventType = require(\"../events/EventType.js\");\n\nvar _EventType2 = _interopRequireDefault(_EventType);\n\nvar _extent = require(\"../extent.js\");\n\nvar _proj = require(\"../proj.js\");\n\nvar _Image3 = require(\"./Image.js\");\n\nvar _Image4 = _interopRequireDefault(_Image3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/source/ImageStatic\n */\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */function (_super) {\n  __extends(Static, _super);\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  function Static(options) {\n    var _this = this;\n    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    var /** @type {import(\"../Image.js\").LoadFunction} */imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : _Image3.defaultImageLoadFunction;\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      projection: (0, _proj.get)(options.projection)\n    }) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    _this.imageExtent_ = options.imageExtent;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    _this.image_ = new _Image2.default(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.imageSize_ = options.imageSize ? options.imageSize : null;\n    _this.image_.addEventListener(_EventType2.default.CHANGE, _this.handleImageChange.bind(_this));\n    return _this;\n  }\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function () {\n    return this.imageExtent_;\n  };\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    if ((0, _extent.intersects)(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function (evt) {\n    if (this.image_.getState() == _ImageState2.default.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth = void 0,\n          imageHeight = void 0;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = (0, _extent.getHeight)(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil((0, _extent.getWidth)(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = (0, _dom.createCanvasContext2D)(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    _super.prototype.handleImageChange.call(this, evt);\n  };\n  return Static;\n}(_Image4.default);\nexports.default = Static;\n//# sourceMappingURL=ImageStatic.js.map"},"hash":"935bc73e2489347c5e978149261b8eb4"}