{"dependencies":[{"name":"../color.js","loc":{"line":4,"column":25}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shared = undefined;\n\nvar _color = require(\"../color.js\");\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */function () {\n  function IconImageCache() {\n    /**\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\n    * @private\n    */\n    this.cache_ = {};\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n  /**\n  * FIXME empty description for jsdoc\n  */\n  IconImageCache.prototype.clear = function () {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  };\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  IconImageCache.prototype.canExpireCache = function () {\n    return this.cacheSize_ > this.maxCacheSize_;\n  };\n  /**\n  * FIXME empty description for jsdoc\n  */\n  IconImageCache.prototype.expire = function () {\n    if (this.canExpireCache()) {\n      var i = 0;\n      for (var key in this.cache_) {\n        var iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  };\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @return {import(\"./IconImage.js\").default} Icon image.\n  */\n  IconImageCache.prototype.get = function (src, crossOrigin, color) {\n    var key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  };\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n  */\n  IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n    var key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  };\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  IconImageCache.prototype.setSize = function (maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  };\n  return IconImageCache;\n}();\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\n/**\n * @module ol/style/IconImageCache\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? (0, _color.asString)(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexports.default = IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nvar shared = exports.shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map"},"hash":"10f5261f483d9d87e43f9cc1558849e6"}