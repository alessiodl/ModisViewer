{"dependencies":[{"name":"../../extent.js","loc":{"line":4,"column":28}},{"name":"./Builder.js","loc":{"line":5,"column":20}},{"name":"./ImageBuilder.js","loc":{"line":6,"column":25}},{"name":"./LineStringBuilder.js","loc":{"line":7,"column":30}},{"name":"./PolygonBuilder.js","loc":{"line":8,"column":27}},{"name":"./TextBuilder.js","loc":{"line":9,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extent = require(\"../../extent.js\");\n\nvar _Builder = require(\"./Builder.js\");\n\nvar _Builder2 = _interopRequireDefault(_Builder);\n\nvar _ImageBuilder = require(\"./ImageBuilder.js\");\n\nvar _ImageBuilder2 = _interopRequireDefault(_ImageBuilder);\n\nvar _LineStringBuilder = require(\"./LineStringBuilder.js\");\n\nvar _LineStringBuilder2 = _interopRequireDefault(_LineStringBuilder);\n\nvar _PolygonBuilder = require(\"./PolygonBuilder.js\");\n\nvar _PolygonBuilder2 = _interopRequireDefault(_PolygonBuilder);\n\nvar _TextBuilder = require(\"./TextBuilder.js\");\n\nvar _TextBuilder2 = _interopRequireDefault(_TextBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\n/**\n * @module ol/render/canvas/BuilderGroup\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': _PolygonBuilder2.default,\n  'Default': _Builder2.default,\n  'Image': _ImageBuilder2.default,\n  'LineString': _LineStringBuilder2.default,\n  'Polygon': _PolygonBuilder2.default,\n  'Text': _TextBuilder2.default\n};\nvar BuilderGroup = /** @class */function () {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  BuilderGroup.prototype.addDeclutter = function (group) {\n    var declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */declutter[0][4]++;\n      } else {\n        declutter = [(0, _extent.createEmpty)()];\n        this.declutterGroups_ = declutter;\n        declutter[0].push(1);\n      }\n    }\n    return declutter;\n  };\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  BuilderGroup.prototype.finish = function () {\n    var builderInstructions = {};\n    for (var zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      var builders = this.buildersByZIndex_[zKey];\n      for (var builderKey in builders) {\n        var builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  };\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[builderType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  };\n  return BuilderGroup;\n}();\nexports.default = BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map"},"hash":"eb3431bb8ede34384d6d7d3f94773094"}