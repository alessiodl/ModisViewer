{"dependencies":[{"name":"../Disposable.js","loc":{"line":17,"column":23}},{"name":"../geom/Polygon.js","loc":{"line":18,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Disposable = require(\"../Disposable.js\");\n\nvar _Disposable2 = _interopRequireDefault(_Disposable);\n\nvar _Polygon = require(\"../geom/Polygon.js\");\n\nvar _Polygon2 = _interopRequireDefault(_Polygon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/render/Box\n */\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar RenderBox = /** @class */function (_super) {\n  __extends(RenderBox, _super);\n  /**\n   * @param {string} className CSS class name.\n   */\n  function RenderBox(className) {\n    var _this = _super.call(this) || this;\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    _this.geometry_ = null;\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    _this.element_ = document.createElement('div');\n    _this.element_.style.position = 'absolute';\n    _this.element_.className = 'ol-box ' + className;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.startPixel_ = null;\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    _this.endPixel_ = null;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function () {\n    this.setMap(null);\n  };\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [startPixel, [startPixel[0], endPixel[1]], endPixel, [endPixel[0], startPixel[1]]];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new _Polygon2.default([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function () {\n    return this.geometry_;\n  };\n  return RenderBox;\n}(_Disposable2.default);\nexports.default = RenderBox;\n//# sourceMappingURL=Box.js.map"},"hash":"7a525d1623ef6b656797740d703f6fae"}